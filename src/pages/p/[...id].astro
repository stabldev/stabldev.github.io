---
import { getCollection, getEntry, render } from "astro:content";
import FeedbackBox from "@components/FeedbackBox.astro";
import Head from "@components/Head.astro";
import TOC from "@components/TOC.astro";
import { siteConfig } from "@config/site";
import Layout from "@layouts/Layout.astro";
import { formatDate } from "@lib/utils";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  return posts.map((post) => ({
    params: { id: post.id },
  }));
}

const { id } = Astro.params;
const post = await getEntry("posts", id);
if (!post) {
  throw new Error(`Could not find post no:${id}`);
}

const { Content, headings } = await render(post);
const filteredHeadings = headings.filter((h) => h.depth <= 3);
---

<Layout>
  <Fragment slot="head">
    <Head
      title={post.data.title}
      description={post.data.description}
      url={`${siteConfig.url}/${id}`}
    />
  </Fragment>
  <div class="mx-auto max-w-4xl px-4">
    <div
      class="mx-auto flex max-w-2xl flex-col items-center justify-center gap-4"
    >
      <span class="text-base-content/75"
        >Published {formatDate(post.data.pubDate)}</span
      >
      <h1 class="text-center font-serif text-4xl font-black md:text-5xl">
        {post.data.title}
      </h1>
      <div class="flex items-center gap-2">
        {
          post.data.categories.map((category) => (
            <span class="text-base-content/75 bg-base-200 border px-2 py-1 text-xs font-bold uppercase">
              {category}
            </span>
          ))
        }
      </div>
    </div>
    <TOC headings={filteredHeadings} />
    <article
      class="prose prose-invert prose-headings:scroll-mt-10 prose-blockquote:border-base-content/20 prose-pre:rounded-none prose-hr:border-base-content/10 prose-pre:border prose-headings:font-serif prose-p:text-base prose-h2:text-3xl prose-h3:text-2xl prose-h4:text-xl my-20 max-w-full md:[&>*]:mx-10"
    >
      <Content />
    </article>
    <FeedbackBox filePath={post.filePath} />
  </div>
</Layout>

<style is:global>
  .expressive-code {
    margin-inline: 0;
  }
  /* .expressive-code .copy button {
    border-radius: 0 !important;
    transition-duration: 0.15s !important;
  } */
</style>
